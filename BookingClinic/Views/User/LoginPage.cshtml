@using BookingClinic.Services
@using BookingClinic.Services.Data.User
@model LoginUserDto
@addTagHelper *, Microsoft.AspNetCore.Mvc.TagHelpers
@{
    ViewData["Title"] = "Login Page";
    var errors = ViewData["Errors"];
}

<div class="modal fade" id="errorModal" tabindex="-1" aria-labelledby="errorModalLabel" aria-hidden="true">
    <div class="modal-dialog">
        <div class="modal-content border-danger">
            <div class="modal-header bg-danger text-white">
                <h5 class="modal-title" id="errorModalLabel">Ошибка</h5>
                <button type="button" class="btn-close btn-close-white" data-bs-dismiss="modal" aria-label="Close"></button>
            </div>
            <div class="modal-body">
                @{
                    if (errors != null)
                    {
                        var error = ((IEnumerable<ServiceError>)errors).First();

                        <div>@error.ErrorMessage</div>
                    }
                }
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-danger" data-bs-dismiss="modal">Close</button>
            </div>
        </div>
    </div>
</div>

<div class="container mt-5">
    <div class="row justify-content-center">
        <div class="col-md-5">
            <div class="card shadow">
                <div class="card-body">
                    <h3 class="card-title mb-4 text-center">Log in</h3>
                    <form asp-action="LoginPost" novalidate>
                        <input type="hidden" asp-for="ReturnUrl"/>
                        <div class="mb-3">
                            <label asp-for="Email" class="form-label"></label>
                            <input asp-for="Email" class="form-control @(ViewData.ModelState["Email"]?.Errors.Count > 0 ? "is-invalid" : "")" type="text" />
                            <span asp-validation-for="Email" class="invalid-feedback"></span>
                        </div>
                        <div class="mb-3">
                            <label asp-for="Password" class="form-label"></label>
                            <input asp-for="Password" class="form-control @(ViewData.ModelState["Password"]?.Errors.Count > 0 ? "is-invalid" : "")" type="password" />
                            <span asp-validation-for="Password" class="invalid-feedback"></span>
                        </div>
                        @if (errors != null)
                        {
                            var err = (errors as IEnumerable<ServiceError>).First();
                            <div class="alert alert-danger" role="alert">
                                @err.ErrorMessage
                            </div>
                        }
                        <div class="d-grid mb-3">
                            <button type="submit" class="btn btn-primary">Log in</button>
                        </div>
                    </form>
                    <div class="text-center">
                        <a asp-action="RegisterPage">Register</a>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>

<script>
    document.addEventListener('DOMContentLoaded', function () {
        @if (errors != null)
        {
                 <text>
                     let errorModal = new bootstrap.Modal(document.getElementById('errorModal'));
                     errorModal.show();
                 </text>
        }
    });
</script>